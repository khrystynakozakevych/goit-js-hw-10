{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// getting DOM elements\nconst datetimePicker = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet timerId = null;\n\n// flatpickr configuration\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    const selectedDate = selectedDates[0];\n    const now = new Date();\n\n    if (selectedDate <= now) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n        backgroundColor: '#ef4040',\n        class: 'custom-toast-error',\n      });\n      startBtn.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      startBtn.disabled = false;\n    }\n  },\n};\n\n// initialize flatpickr\nflatpickr(datetimePicker, options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\n// formatting the time\nconst addLeadingZero = value => String(value).padStart(2, '0');\n\n// updating timer display\nconst updateTimerDisplay = ms => {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  daysEl.textContent = addLeadingZero(days);\n  hoursEl.textContent = addLeadingZero(hours);\n  minutesEl.textContent = addLeadingZero(minutes);\n  secondsEl.textContent = addLeadingZero(seconds);\n};\n\n// timer start function\nconst startCountdown = () => {\n  startBtn.disabled = true;\n  datetimePicker.disabled = true;\n\n  timerId = setInterval(() => {\n    const now = new Date();\n    const timeDiff = userSelectedDate - now;\n\n    if (timeDiff <= 0) {\n      clearInterval(timerId);\n      updateTimerDisplay(0);\n      iziToast.success({\n        title: 'Complete',\n        message: 'Countdown has ended!',\n        position: 'topRight',\n        backgroundColor: '#59a10d',\n        class: 'custom-toast-success',\n      });\n      datetimePicker.disabled = false;\n      startBtn.disabled = true;\n      return;\n    }\n\n    updateTimerDisplay(timeDiff);\n  }, 1000);\n};\n\n// event listener\nstartBtn.addEventListener('click', startCountdown);\n"],"names":["datetimePicker","startBtn","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","timerId","options","selectedDates","selectedDate","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","updateTimerDisplay","startCountdown","timeDiff"],"mappings":"0IAMA,MAAMA,EAAiB,SAAS,cAAc,kBAAkB,EAC1DC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAmB,KACnBC,EAAU,KAGd,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAC5B,MAAMC,EAAeD,EAAc,CAAC,EAGhCC,GAFQ,IAAI,MAGdC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,WACV,gBAAiB,UACjB,MAAO,oBACf,CAAO,EACDV,EAAS,SAAW,KAEpBK,EAAmBI,EACnBT,EAAS,SAAW,GAEvB,CACH,EAGAW,EAAUZ,EAAgBQ,CAAO,EAEjC,SAASK,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIL,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC,EAG/B,MAAMM,EAAiBC,GAAS,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,EAGvDC,EAAqBP,GAAM,CAC/B,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYL,EAAUC,CAAE,EACtDZ,EAAO,YAAciB,EAAeJ,CAAI,EACxCZ,EAAQ,YAAcgB,EAAeH,CAAK,EAC1CZ,EAAU,YAAce,EAAeF,CAAO,EAC9CZ,EAAU,YAAcc,EAAeD,CAAO,CAChD,EAGMI,EAAiB,IAAM,CAC3BrB,EAAS,SAAW,GACpBD,EAAe,SAAW,GAE1BO,EAAU,YAAY,IAAM,CAE1B,MAAMgB,EAAWjB,EADL,IAAI,KAGhB,GAAIiB,GAAY,EAAG,CACjB,cAAchB,CAAO,EACrBc,EAAmB,CAAC,EACpBV,EAAS,QAAQ,CACf,MAAO,WACP,QAAS,uBACT,SAAU,WACV,gBAAiB,UACjB,MAAO,sBACf,CAAO,EACDX,EAAe,SAAW,GAC1BC,EAAS,SAAW,GACpB,MACD,CAEDoB,EAAmBE,CAAQ,CAC5B,EAAE,GAAI,CACT,EAGAtB,EAAS,iBAAiB,QAASqB,CAAc"}